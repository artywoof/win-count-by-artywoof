# Win Count System Audit: Hotkey → Backend → Broadcast → WebSocket → Overlay

## ✅ Passed

- Hotkey (Alt= / Alt–) is registered via tauri-plugin-global-shortcut in the backend.
- The hotkey handler calls the `change_win` function with the correct arguments.
- `change_win` updates `s.win` and emits the Tauri event `win-updated`.
- `change_win` calls `broadcast_tx.send(s.win)` to push the new win value to the broadcast channel.
- The WebSocket server subscribes to the broadcast channel using `broadcast_rx.recv()`.
- The WebSocket server sends a JSON message in the format `{ "type": "win", "value": win }` to all connected overlays.
- The overlay connects to `ws://localhost:8080` using a WebSocket.
- The overlay has an `onmessage` listener that parses incoming messages with `JSON.parse(event.data)`.
- If the message has `type === "win"`, the overlay calls `tauriWin.set(data.value)` and logs the update.
- The overlay displays a fallback UI (e.g., "Waiting for data...") if no win value has been received yet.

## ❌ Broken

- No major broken links detected in the Hotkey → Overlay data flow based on current code and audit.

## 🛠 Suggested Fixes

- If win is not updating in the overlay:
  - Add debug logs in the hotkey handler, after `change_win`, after `broadcast_tx.send`, in the WebSocket server loop, and in the overlay's `onmessage`.
  - Ensure the WebSocket server is running and overlays are connected.
  - Double-check that the overlay parses and updates the store correctly.
- If you want to support more robust error handling, consider adding user-facing error messages in the overlay and backend.

## 🔎 Notes

- The system is modular and each part (hotkey, backend, WebSocket, overlay) can be debugged independently.
- If you add new features (e.g., custom preset management, overlay customization), update this audit to cover new data flows.
- For production, consider adding authentication or origin checks to the WebSocket server if security is a concern.

---

This report was generated by GitHub Copilot Agent on 2025-06-27.
