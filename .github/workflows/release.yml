# .github/workflows/release.yml
name: 🚀 Win Count by ArtYWoof

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: windows-latest
    environment: Win Count by ArtYWoof
    
    steps:
      - name: 📂 Checkout repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: 🦀 Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: 🔧 Install dependencies
        run: bun install

      - name: 🏗️ Build frontend
        run: bun run build:frontend

      - name: 🏷️ Get version
        id: get_version
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: 📱 Build Tauri app with Auto-Update
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          includeUpdaterJson: true
          includeDebug: false
          includeRelease: true
          releaseBody: |
            ## 🎉 Win Count by ArtYWoof ${{ steps.get_version.outputs.VERSION }}
            
            ### 📥 Download:
            - **Windows:** Download the `.msi` file below
            - **Auto-Update:** Existing users will be notified automatically
            
            ### 🔄 Installation:
            1. Download the MSI installer
            2. Run as Administrator  
            3. Follow installation wizard
            4. Launch from Start Menu
            
            ---
            
            **🚀 Auto-update enabled!**

      - name: 🗑️ Remove Source Code Assets
        shell: powershell
        run: |
          Write-Host "🔍 Listing all release assets..."
          gh release view ${{ steps.get_version.outputs.VERSION }}
          
          Write-Host "🗑️ Attempting to remove source code assets..."
          
          # Try to delete common source code asset names
          $sourceAssets = @(
            "Source code (zip)",
            "Source code (tar.gz)",
            "${{ github.event.repository.name }}-${{ steps.get_version.outputs.VERSION }}.zip",
            "${{ github.event.repository.name }}-${{ steps.get_version.outputs.VERSION }}.tar.gz"
          )
          
          foreach ($asset in $sourceAssets) {
            try {
              Write-Host "🗑️ Trying to delete: $asset"
              gh release delete-asset ${{ steps.get_version.outputs.VERSION }} "$asset" --yes
              Write-Host "✅ Deleted: $asset"
            } catch {
              Write-Host "ℹ️ Asset not found or already deleted: $asset"
            }
          }
          
          Write-Host "🔍 Final release assets:"
          gh release view ${{ steps.get_version.outputs.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ✅ Release Summary
        run: |
          echo "🎉 Release ${{ steps.get_version.outputs.VERSION }} completed!"
          echo "📦 MSI installer created successfully"
          echo "🔐 Digital signature applied"
          echo "📄 latest.json generated for auto-update"
          echo "🗑️ Source code assets removed"
          echo "🔗 Download: https://github.com/${{ github.repository }}/releases/tag/${{ steps.get_version.outputs.VERSION }}"
          echo ""
          echo "✅ Auto-update is now enabled!"
          echo "🔄 Users will receive update notifications automatically" 